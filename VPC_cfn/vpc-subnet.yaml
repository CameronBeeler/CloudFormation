AWSTemplateFormatVersion: 2010-09-09
Description: VPC creation only - the simplest possible vpc config (with CIDR, IGW, route tables & Name parameters, of course )
# Amongst other things, used for CFN labeling and grouping user entry
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Naming Conventions
        Parameters:
          - MyAccountName
          - MyVPCName
      - Label:
          default: CIDR range assignment to the VPC
        Parameters:
          - MyCidrBlock
          - MyEnableDnsHostnames 
          - MyEnableDnsSupport
          - MyAvailabilityZone 
          - MapPublicIPOnLaunch
    ParameterLabels:
      MyAccountName:
        default: The name of the AWS Account being used
      MyVPCName:
        default: What is the name you would like to assign to the VPC you are creating?

Parameters:
  MyAccountName:
    Description: Please enter the name of the AWS Account
    Type: String
  MyVPCName:
    Description: Please enter the name of this MyVPC
    Type: String
    Default: MyCFNCreatedVPC
  MyCidrBlock:
    Description: VPC CIDR Block - Each Octat must be 255 or less, and the end cidr range < 25 ie, 100.254.0.0/20
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 10.0.0.0/16
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|1[0-9]|2[0-4]))$
#  MyAvailabilityZone:
#    Description: Availability zone of the subnet
#    Type: AWS::EC2::AvailabilityZone::Name
  MapPublicIPOnLaunch: 
    Description: Automatically assign public IPs to instances
    AllowedValues:
    - true
    - false
    Type: String
    Default: true
  MyEnableDnsHostnames:
    Description:  Enable VPC DNS Hostname lookups
    AllowedValues:
    - true
    - false
    Type: String
    Default: true
  MyEnableDnsSupport:
    Description:  Enable VPC DNS Support 
    AllowedValues:
    - true
    - false
    Type: String
    Default: true

Resources:
  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref MyCidrBlock
      EnableDnsHostnames: !Ref MyEnableDnsHostnames
      EnableDnsSupport: !Ref MyEnableDnsSupport
      InstanceTenancy: default
      Tags: 
      - Key: "Region"
        Value: !Sub '${AWS::Region}'
      - Key:  "Account"
        Value: !Sub '${AWS::AccountId}'
      - Key:  Account Name
        Value:  !Ref MyAccountName
      - Key: Name
        Value: !Sub '${MyVPCName}_vpc'
      - Key:  Resource
        Value: VPC

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags: 
      - Key: "Region"
        Value: !Sub '${AWS::Region}'
      - Key:  "Account"
        Value: !Sub '${AWS::AccountId}'
      - Key:  Account Name
        Value:  !Ref MyAccountName
      - Key: Name
        Value: !Sub '${MyVPCName}_igw'
      - Key:  Resource
        Value: Internet Gateway

  GatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId:
        Ref: InternetGateway
      VpcId:
        Ref: MyVPC

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MyVPC
      Tags: 
      - Key: "Region"
        Value: !Sub '${AWS::Region}'
      - Key:  "Account"
        Value: !Sub '${AWS::AccountId}'
      - Key:  Account Name
        Value:  !Ref MyAccountName
      - Key: Name
        Value: !Sub 'public_${MyVPCName}_rt'
      - Key:  Resource
        Value:  Public Route Table 

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway
      RouteTableId:
        Ref: PublicRouteTable

  MySubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select 
      - 0 
      - Fn::GetAZs: !Ref 'AWS::Region'
      CidrBlock: !Select 
      - 0
      -  Fn::Cidr: [ !Ref MyCidrBlock, 1, 8 ]
      MapPublicIpOnLaunch: !Ref MapPublicIPOnLaunch
      VpcId: !Ref MyVPC
      Tags: 
      - Key: "Region"
        Value: !Sub '${AWS::Region}'
      - Key:  "Account"
        Value: !Sub '${AWS::AccountId}'
      - Key:  Account Name
        Value:  !Ref MyAccountName
      - Key: Name
        Value: !Sub '${MyVPCName}_vpc'
      - Key:  Resource
        Value: Public Subnet

  MySubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
     RouteTableId: !Ref PublicRouteTable 
     SubnetId:  !Ref MySubnet

Outputs:
  MyVpcId:
    Description: The ID of the VPC
    Value: !Ref MyVPC
    Export:
      Name: !Sub "${AWS::StackName}-vpcid"
  MyPublicRouteTableId:
   Description:  The ID of the Public Route Table
   Value:  !Ref PublicRouteTable
   Export:
    Name: !Sub "${AWS::StackName}-rtid"
  MySubnetId:
    Description: The ID of the subnet
    Value: !Ref MySubnet
    Export:
      Name: !Sub "${AWS::StackName}-SubnetID"